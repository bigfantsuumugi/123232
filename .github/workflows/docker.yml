name: Docker
on:
  push:
    branches:
      - '*'
      - '*/*'
      - '**'
    tags:
      - 'v*.*.*'
jobs:
  build_and_push:
    name: Build and push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=botpress/server
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=latest
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Checkout code
        uses: actions/checkout@v2.1.0
        with:
          token: ${{ secrets.PAT_DOCKER }}
          submodules: true
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.13.0'
      - name: Build
        run: |
          export npm_config_target_platform=linux
          export EDITION=pro
          git submodule update --init
          yarn --force --ignore-engines
          yarn run build --linux --prod --verbose
          yarn run package --linux
          cp build/docker/Dockerfile packages/bp/binaries/
      - name: DockerHub Authentication
        if: steps.check-tag.outputs.match == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
      - name: Docker build and push
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: botpress/botpress/botpress
          path: packages/bp/binaries
          tag_with_sha: true
