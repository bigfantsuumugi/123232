name: Publish and release module builder
on:
  push:
    tags:
      - "module-builder-v*" # Push events to matching module-builder-v*

jobs:
  test_module_builder:
    name: Build and publish module builder
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.1.0
      - name: Prepare
        id: prep
        run: |
          TAG=$(echo $(git describe ${{ github.sha }} --tags)) ## Get the tags from the SHA hash
          echo "Building with origin tag $TAG"
          VALID_TAG="^module-builder-v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$"  ## Will match Tags in the following format v123.231.123 or v1.2.3 will discard the following format v1.2.4-<revision>
          DOCKER_IMAGE=botpress/module-builder
          VERSION=()
          TAGS=()
          if [[ $TAG =~ $VALID_TAG ]]; then
            VERSION=($(echo ${TAG} | sed -r 's/module-builder-//')) # transform module-builder-v0.0.0 to v0.0.0
            VERSION=($(echo ${VERSION} | sed -r 's/\./_/g')) # Transform v0.0.3 to v0_0_3
            echo ::set-output name=release::"true"
          else
            echo "Invalid tag format, use module-builder-vXXX.XXX.XXX"
          fi
          GITHUB_REGISTRY="ghcr.io/${{ github.repository_owner }}/${DOCKER_IMAGE}"
          TAGS=("${VERSION[@]/#/${GITHUB_REGISTRY}:}")
          echo "Will publish tags $TAGS"
          IFS=,
          echo ::set-output name=version::${VERSION[*]}
          echo ::set-output name=tags::"${TAGS[*]}"
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: DockerHub Authentication
        uses: docker/login-action@v1
        if: ${{ steps.prep.outputs.release }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: build/module-builder/Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
