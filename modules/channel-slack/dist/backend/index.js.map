{"version":3,"sources":["index.ts"],"names":["router","clients","onServerStarted","bp","onServerReady","http","createRouterForBot","checkAuthentication","enableJsonBodyParser","enableUrlEncoderBodyParser","onBotMount","botId","config","getModuleConfigForBot","enabled","bot","SlackClient","initialize","onBotUnmount","client","entryPoint","definition","name","menuIcon","menuText","noInterface","fullName","homepage"],"mappings":";;;;;;;AAIA;;AAGA,IAAIA,MAAJ;AACA,MAAMC,OAAgB,GAAG,EAAzB;;AAEA,MAAMC,eAAe,GAAG,MAAOC,EAAP,IAA0B;AAChD,QAAM,6BAAgBA,EAAhB,EAAoBF,OAApB,CAAN;AACD,CAFD;;AAIA,MAAMG,aAAa,GAAG,MAAOD,EAAP,IAA0B;AAC9CH,EAAAA,MAAM,GAAGG,EAAE,CAACE,IAAH,CAAQC,kBAAR,CAA2B,eAA3B,EAA4C;AACnDC,IAAAA,mBAAmB,EAAE,KAD8B;AAEnDC,IAAAA,oBAAoB,EAAE,KAF6B;AAGnDC,IAAAA,0BAA0B,EAAE;AAHuB,GAA5C,CAAT;AAKD,CAND;;AAQA,MAAMC,UAAU,GAAG,OAAOP,EAAP,EAAuBQ,KAAvB,KAAyC;AAC1D,QAAMC,MAAM,GAAI,MAAMT,EAAE,CAACS,MAAH,CAAUC,qBAAV,CAAgC,eAAhC,EAAiDF,KAAjD,CAAtB;;AAEA,MAAIC,MAAM,CAACE,OAAX,EAAoB;AAClB,UAAMC,GAAG,GAAG,IAAIC,mBAAJ,CAAgBb,EAAhB,EAAoBQ,KAApB,EAA2BC,MAA3B,EAAmCZ,MAAnC,CAAZ;AACA,UAAMe,GAAG,CAACE,UAAJ,EAAN;AAEAhB,IAAAA,OAAO,CAACU,KAAD,CAAP,GAAiBI,GAAjB;AACD;AACF,CATD;;AAWA,MAAMG,YAAY,GAAG,OAAOf,EAAP,EAAuBQ,KAAvB,KAAyC;AAC5D,QAAMQ,MAAM,GAAGlB,OAAO,CAACU,KAAD,CAAtB;;AACA,MAAI,CAACQ,MAAL,EAAa;AACX;AACD;;AAED,SAAOlB,OAAO,CAACU,KAAD,CAAd;AACD,CAPD;;AASA,MAAMS,UAAgC,GAAG;AACvClB,EAAAA,eADuC;AAEvCE,EAAAA,aAFuC;AAGvCM,EAAAA,UAHuC;AAIvCQ,EAAAA,YAJuC;AAKvCG,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAE,eADI;AAEVC,IAAAA,QAAQ,EAAE,MAFA;AAGVC,IAAAA,QAAQ,EAAE,eAHA;AAIVC,IAAAA,WAAW,EAAE,IAJH;AAKVC,IAAAA,QAAQ,EAAE,OALA;AAMVC,IAAAA,QAAQ,EAAE;AANA;AAL2B,CAAzC;eAeeP,U","sourceRoot":"C:\\botpress\\modules\\channel-slack\\src\\backend","sourcesContent":["import * as sdk from 'botpress/sdk'\r\n\r\nimport { Config } from '../config'\r\n\r\nimport { setupMiddleware, SlackClient } from './client'\r\nimport { Clients } from './typings'\r\n\r\nlet router\r\nconst clients: Clients = {}\r\n\r\nconst onServerStarted = async (bp: typeof sdk) => {\r\n  await setupMiddleware(bp, clients)\r\n}\r\n\r\nconst onServerReady = async (bp: typeof sdk) => {\r\n  router = bp.http.createRouterForBot('channel-slack', {\r\n    checkAuthentication: false,\r\n    enableJsonBodyParser: false,\r\n    enableUrlEncoderBodyParser: false\r\n  })\r\n}\r\n\r\nconst onBotMount = async (bp: typeof sdk, botId: string) => {\r\n  const config = (await bp.config.getModuleConfigForBot('channel-slack', botId)) as Config\r\n\r\n  if (config.enabled) {\r\n    const bot = new SlackClient(bp, botId, config, router)\r\n    await bot.initialize()\r\n\r\n    clients[botId] = bot\r\n  }\r\n}\r\n\r\nconst onBotUnmount = async (bp: typeof sdk, botId: string) => {\r\n  const client = clients[botId]\r\n  if (!client) {\r\n    return\r\n  }\r\n\r\n  delete clients[botId]\r\n}\r\n\r\nconst entryPoint: sdk.ModuleEntryPoint = {\r\n  onServerStarted,\r\n  onServerReady,\r\n  onBotMount,\r\n  onBotUnmount,\r\n  definition: {\r\n    name: 'channel-slack',\r\n    menuIcon: 'none',\r\n    menuText: 'Channel Slack',\r\n    noInterface: true,\r\n    fullName: 'Slack',\r\n    homepage: 'https://botpress.io'\r\n  }\r\n}\r\n\r\nexport default entryPoint\r\n"]}