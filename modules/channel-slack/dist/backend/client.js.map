{"version":3,"sources":["client.ts"],"names":["debug","DEBUG","debugIncoming","sub","debugOutgoing","outgoingTypes","SlackClient","constructor","bp","botId","config","router","client","WebClient","botToken","rtm","RTMClient","interactive","signingSecret","initialize","_setupInteractiveListener","_setupRealtime","action","type","payload","actionId","_","get","label","value","startsWith","axios","post","response_url","text","delete_original","sendEvent","use","requestListener","discardedSubtypes","on","includes","subtype","start","handleOutgoingEvent","event","next","sendTyping","threadId","target","Promise","resolve","setTimeout","undefined","messageType","Error","blocks","push","cards","forEach","card","quick_replies","message","channel","chat","postMessage","ctx","events","IO","Event","direction","preview","toString","setupMiddleware","clients","registerMiddleware","description","handler","outgoingHandler","name","order"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAGA;;;;;;AAMA,MAAMA,KAAK,GAAGC,KAAK,CAAC,eAAD,CAAnB;AACA,MAAMC,aAAa,GAAGF,KAAK,CAACG,GAAN,CAAU,UAAV,CAAtB;AACA,MAAMC,aAAa,GAAGJ,KAAK,CAACG,GAAN,CAAU,UAAV,CAAtB;AAEA,MAAME,aAAa,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,EAA6B,QAA7B,EAAuC,UAAvC,CAAtB;;AAEO,MAAMC,WAAN,CAAkB;AAOvBC,EAAAA,WAAW,CAASC,EAAT,EAAyBC,KAAzB,EAAwCC,MAAxC,EAAwDC,MAAxD,EAAgE;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACzE,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAKE,MAAL,GAAcA,MAAd;AAEA,SAAKC,MAAL,GAAc,IAAIC,iBAAJ,CAAcH,MAAM,CAACI,QAArB,CAAd;AACA,SAAKC,GAAL,GAAW,IAAIC,iBAAJ,CAAcN,MAAM,CAACI,QAArB,CAAX;AACA,SAAKG,WAAL,GAAmB,+CAAqBP,MAAM,CAACQ,aAA5B,EAA2C,EAA3C,CAAnB;AACD;;AAED,QAAMC,UAAN,GAAmB;AACjB,UAAM,KAAKC,yBAAL,EAAN;AACA,UAAM,KAAKC,cAAL,EAAN;AACD;;AAEOD,EAAAA,yBAAR,GAAoC;AAClC,SAAKH,WAAL,CAAiBK,MAAjB,CAAwB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAxB,EAA4C,MAAMC,OAAN,IAAiB;AAC3DtB,MAAAA,aAAa,CAAE,iCAAF,EAAoCsB,OAApC,CAAb;;AAEA,YAAMC,QAAQ,GAAGC,gBAAEC,GAAF,CAAMH,OAAN,EAAe,sBAAf,EAAuC,EAAvC,CAAjB;;AACA,YAAMI,KAAK,GAAGF,gBAAEC,GAAF,CAAMH,OAAN,EAAe,sBAAf,EAAuC,EAAvC,CAAd;;AACA,YAAMK,KAAK,GAAGH,gBAAEC,GAAF,CAAMH,OAAN,EAAe,kBAAf,EAAmC,EAAnC,CAAd,CAL2D,CAO3D;;;AACA,UAAI,CAACC,QAAQ,CAACK,UAAT,CAAoB,gBAApB,CAAL,EAA4C;AAC1C;AACA,YAAIL,QAAQ,CAACK,UAAT,CAAoB,iBAApB,CAAJ,EAA4C;AAC1C,gBAAMC,eAAMC,IAAN,CAAWR,OAAO,CAACS,YAAnB,EAAiC;AAAEC,YAAAA,IAAI,EAAG,IAAGN,KAAM;AAAlB,WAAjC,CAAN;AACD,SAFD,MAEO,IAAIH,QAAQ,CAACK,UAAT,CAAoB,gBAApB,CAAJ,EAA2C;AAChD,gBAAMC,eAAMC,IAAN,CAAWR,OAAO,CAACS,YAAnB,EAAiC;AAAEE,YAAAA,eAAe,EAAE;AAAnB,WAAjC,CAAN;AACD;;AAED,cAAM,KAAKC,SAAL,CAAeZ,OAAf,EAAwB;AAAED,UAAAA,IAAI,EAAE,aAAR;AAAuBW,UAAAA,IAAI,EAAEN,KAA7B;AAAoCJ,UAAAA,OAAO,EAAEK;AAA7C,SAAxB,CAAN;AACD;AACF,KAlBD;AAoBA,SAAKZ,WAAL,CAAiBK,MAAjB,CAAwB;AAAEG,MAAAA,QAAQ,EAAE;AAAZ,KAAxB,EAAyD,MAAMD,OAAN,IAAiB;AACxE,YAAMI,KAAK,GAAGF,gBAAEC,GAAF,CAAMH,OAAN,EAAe,sCAAf,EAAuD,EAAvD,CAAd;;AACA,YAAMK,KAAK,GAAGH,gBAAEC,GAAF,CAAMH,OAAN,EAAe,kCAAf,EAAmD,EAAnD,CAAd,CAFwE,CAIxE;;;AACA,YAAM,KAAKY,SAAL,CAAeZ,OAAf,EAAwB;AAAED,QAAAA,IAAI,EAAE,aAAR;AAAuBW,QAAAA,IAAI,EAAEN,KAA7B;AAAoCJ,QAAAA,OAAO,EAAEK;AAA7C,OAAxB,CAAN;AACD,KAND;AAQA,SAAKlB,MAAL,CAAY0B,GAAZ,CAAiB,SAAQ,KAAK5B,KAAM,WAApC,EAAgD,KAAKQ,WAAL,CAAiBqB,eAAjB,EAAhD;AACD;;AAED,QAAcjB,cAAd,GAA+B;AAC7B,UAAMkB,iBAAiB,GAAG,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,iBAAnC,CAA1B;AACA,SAAKxB,GAAL,CAASyB,EAAT,CAAY,SAAZ,EAAuB,MAAMhB,OAAN,IAAiB;AACtCtB,MAAAA,aAAa,CAAE,+BAAF,EAAkCsB,OAAlC,CAAb;;AAEA,UAAI,CAACe,iBAAiB,CAACE,QAAlB,CAA2BjB,OAAO,CAACkB,OAAnC,CAAL,EAAkD;AAChD,cAAM,KAAKN,SAAL,CAAeZ,OAAf,EAAwB;AAAED,UAAAA,IAAI,EAAE,MAAR;AAAgBW,UAAAA,IAAI,EAAEV,OAAO,CAACU;AAA9B,SAAxB,CAAN;AACD;AACF,KAND;AAQA,UAAM,KAAKnB,GAAL,CAAS4B,KAAT,EAAN;AACD;;AAED,QAAMC,mBAAN,CAA0BC,KAA1B,EAA+CC,IAA/C,EAAoF;AAClF,QAAID,KAAK,CAACtB,IAAN,KAAe,QAAnB,EAA6B;AAC3B,YAAM,KAAKR,GAAL,CAASgC,UAAT,CAAoBF,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACI,MAA5C,CAAN;AACA,YAAM,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAAC,MAAMD,OAAO,EAAd,EAAkB,IAAlB,CAAjC,CAAN;AAEA,aAAOL,IAAI,CAACO,SAAD,EAAY,KAAZ,CAAX;AACD;;AAED,UAAMC,WAAW,GAAGT,KAAK,CAACtB,IAAN,KAAe,SAAf,GAA2B,MAA3B,GAAoCsB,KAAK,CAACtB,IAA9D;;AACA,QAAI,CAACG,gBAAEe,QAAF,CAAWpC,aAAX,EAA0BiD,WAA1B,CAAL,EAA6C;AAC3C,aAAOR,IAAI,CAAC,IAAIS,KAAJ,CAAU,6BAA6BV,KAAK,CAACtB,IAA7C,CAAD,CAAX;AACD;;AAED,UAAMiC,MAAM,GAAG,EAAf;;AACA,QAAIF,WAAW,KAAK,OAAhB,IAA2BA,WAAW,KAAK,SAA/C,EAA0D;AACxDE,MAAAA,MAAM,CAACC,IAAP,CAAYZ,KAAK,CAACrB,OAAlB;AACD,KAFD,MAEO,IAAI8B,WAAW,KAAK,UAApB,EAAgC;AACrCT,MAAAA,KAAK,CAACrB,OAAN,CAAckC,KAAd,CAAoBC,OAApB,CAA4BC,IAAI,IAAIJ,MAAM,CAACC,IAAP,CAAY,GAAGG,IAAf,CAApC;AACD;;AAED,QAAIf,KAAK,CAACrB,OAAN,CAAcqC,aAAlB,EAAiC;AAC/BL,MAAAA,MAAM,CAACC,IAAP,CAAY;AAAElC,QAAAA,IAAI,EAAE,SAAR;AAAmBW,QAAAA,IAAI,EAAE;AAAEX,UAAAA,IAAI,EAAE,QAAR;AAAkBW,UAAAA,IAAI,EAAEW,KAAK,CAACrB,OAAN,CAAcU;AAAtC;AAAzB,OAAZ;AACAsB,MAAAA,MAAM,CAACC,IAAP,CAAYZ,KAAK,CAACrB,OAAN,CAAcqC,aAA1B;AACD;;AAED,UAAMC,OAAO,GAAG;AACd5B,MAAAA,IAAI,EAAEW,KAAK,CAACrB,OAAN,CAAcU,IADN;AAEd6B,MAAAA,OAAO,EAAElB,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACI,MAFnB;AAGdO,MAAAA;AAHc,KAAhB;AAMApD,IAAAA,aAAa,CAAE,oBAAF,EAAuB0D,OAAvB,CAAb;AACA,UAAM,KAAKlD,MAAL,CAAYoD,IAAZ,CAAiBC,WAAjB,CAA6BH,OAA7B,CAAN;AAEAhB,IAAAA,IAAI,CAACO,SAAD,EAAY,KAAZ,CAAJ;AACD;;AAED,QAAcjB,SAAd,CAAwB8B,GAAxB,EAAkC1C,OAAlC,EAAgD;AAC9C,UAAMwB,QAAQ,GAAGtB,gBAAEC,GAAF,CAAMuC,GAAN,EAAW,YAAX,KAA4BxC,gBAAEC,GAAF,CAAMuC,GAAN,EAAW,SAAX,CAA7C;;AACA,UAAMjB,MAAM,GAAGvB,gBAAEC,GAAF,CAAMuC,GAAN,EAAW,SAAX,KAAyBxC,gBAAEC,GAAF,CAAMuC,GAAN,EAAW,MAAX,CAAxC;;AAEA,SAAK1D,EAAL,CAAQ2D,MAAR,CAAe/B,SAAf,CACE,KAAK5B,EAAL,CAAQ4D,EAAR,CAAWC,KAAX,CAAiB;AACf5D,MAAAA,KAAK,EAAE,KAAKA,KADG;AAEfsD,MAAAA,OAAO,EAAE,OAFM;AAGfO,MAAAA,SAAS,EAAE,UAHI;AAIf9C,MAAAA,OAJe;AAKfD,MAAAA,IAAI,EAAEC,OAAO,CAACD,IALC;AAMfgD,MAAAA,OAAO,EAAE/C,OAAO,CAACU,IANF;AAOfc,MAAAA,QAAQ,EAAEA,QAAQ,IAAIA,QAAQ,CAACwB,QAAT,EAPP;AAQfvB,MAAAA,MAAM,EAAEA,MAAM,IAAIA,MAAM,CAACuB,QAAP;AARH,KAAjB,CADF;AAYD;;AAvHsB;;;;AA0HlB,eAAeC,eAAf,CAA+BjE,EAA/B,EAA+CkE,OAA/C,EAAiE;AACtElE,EAAAA,EAAE,CAAC2D,MAAH,CAAUQ,kBAAV,CAA6B;AAC3BC,IAAAA,WAAW,EACT,sDACA,+EAHyB;AAI3BN,IAAAA,SAAS,EAAE,UAJgB;AAK3BO,IAAAA,OAAO,EAAEC,eALkB;AAM3BC,IAAAA,IAAI,EAAE,oBANqB;AAO3BC,IAAAA,KAAK,EAAE;AAPoB,GAA7B;;AAUA,iBAAeF,eAAf,CAA+BjC,KAA/B,EAAoDC,IAApD,EAAyF;AACvF,QAAID,KAAK,CAACkB,OAAN,KAAkB,OAAtB,EAA+B;AAC7B,aAAOjB,IAAI,EAAX;AACD;;AAED,UAAMlC,MAAmB,GAAG8D,OAAO,CAAC7B,KAAK,CAACpC,KAAP,CAAnC;;AACA,QAAI,CAACG,MAAL,EAAa;AACX,aAAOkC,IAAI,EAAX;AACD;;AAED,WAAOlC,MAAM,CAACgC,mBAAP,CAA2BC,KAA3B,EAAkCC,IAAlC,CAAP;AACD;AACF","sourceRoot":"C:\\botpress\\modules\\channel-slack\\src\\backend","sourcesContent":["import { createMessageAdapter } from '@slack/interactive-messages'\r\nimport { RTMClient } from '@slack/rtm-api'\r\nimport { WebClient } from '@slack/web-api'\r\nimport axios from 'axios'\r\nimport * as sdk from 'botpress/sdk'\r\nimport { Router } from 'express'\r\nimport _ from 'lodash'\r\n\r\nimport { Config } from '../config'\r\n\r\nimport { Clients } from './typings'\r\n\r\nconst debug = DEBUG('channel-slack')\r\nconst debugIncoming = debug.sub('incoming')\r\nconst debugOutgoing = debug.sub('outgoing')\r\n\r\nconst outgoingTypes = ['text', 'image', 'actions', 'typing', 'carousel']\r\n\r\nexport class SlackClient {\r\n  private router: Router & sdk.http.RouterExtension\r\n  private client: WebClient\r\n  private rtm: RTMClient\r\n  private interactive: any\r\n  private botId: string\r\n\r\n  constructor(private bp: typeof sdk, botId: string, config: Config, router) {\r\n    this.botId = botId\r\n    this.router = router\r\n\r\n    this.client = new WebClient(config.botToken)\r\n    this.rtm = new RTMClient(config.botToken)\r\n    this.interactive = createMessageAdapter(config.signingSecret, {}) as any\r\n  }\r\n\r\n  async initialize() {\r\n    await this._setupInteractiveListener()\r\n    await this._setupRealtime()\r\n  }\r\n\r\n  private _setupInteractiveListener() {\r\n    this.interactive.action({ type: 'button' }, async payload => {\r\n      debugIncoming(`Received interactive message %o`, payload)\r\n\r\n      const actionId = _.get(payload, 'actions[0].action_id', '')\r\n      const label = _.get(payload, 'actions[0].text.text', '')\r\n      const value = _.get(payload, 'actions[0].value', '')\r\n\r\n      // Some actions (ex: open url) should be discarded\r\n      if (!actionId.startsWith('discard_action')) {\r\n        // Either we leave buttons displayed, we replace with the selection, or we remove it\r\n        if (actionId.startsWith('replace_buttons')) {\r\n          await axios.post(payload.response_url, { text: `*${label}*` })\r\n        } else if (actionId.startsWith('remove_buttons')) {\r\n          await axios.post(payload.response_url, { delete_original: true })\r\n        }\r\n\r\n        await this.sendEvent(payload, { type: 'quick_reply', text: label, payload: value })\r\n      }\r\n    })\r\n\r\n    this.interactive.action({ actionId: 'option_selected' }, async payload => {\r\n      const label = _.get(payload, 'actions[0].selected_option.text.text', '')\r\n      const value = _.get(payload, 'actions[0].selected_option.value', '')\r\n\r\n      //  await axios.post(payload.response_url, { text: `*${label}*` })\r\n      await this.sendEvent(payload, { type: 'quick_reply', text: label, payload: value })\r\n    })\r\n\r\n    this.router.use(`/bots/${this.botId}/callback`, this.interactive.requestListener())\r\n  }\r\n\r\n  private async _setupRealtime() {\r\n    const discardedSubtypes = ['bot_message', 'message_deleted', 'message_changed']\r\n    this.rtm.on('message', async payload => {\r\n      debugIncoming(`Received real time payload %o`, payload)\r\n\r\n      if (!discardedSubtypes.includes(payload.subtype)) {\r\n        await this.sendEvent(payload, { type: 'text', text: payload.text })\r\n      }\r\n    })\r\n\r\n    await this.rtm.start()\r\n  }\r\n\r\n  async handleOutgoingEvent(event: sdk.IO.Event, next: sdk.IO.MiddlewareNextCallback) {\r\n    if (event.type === 'typing') {\r\n      await this.rtm.sendTyping(event.threadId || event.target)\r\n      await new Promise(resolve => setTimeout(() => resolve(), 1000))\r\n\r\n      return next(undefined, false)\r\n    }\r\n\r\n    const messageType = event.type === 'default' ? 'text' : event.type\r\n    if (!_.includes(outgoingTypes, messageType)) {\r\n      return next(new Error('Unsupported event type: ' + event.type))\r\n    }\r\n\r\n    const blocks = []\r\n    if (messageType === 'image' || messageType === 'actions') {\r\n      blocks.push(event.payload)\r\n    } else if (messageType === 'carousel') {\r\n      event.payload.cards.forEach(card => blocks.push(...card))\r\n    }\r\n\r\n    if (event.payload.quick_replies) {\r\n      blocks.push({ type: 'section', text: { type: 'mrkdwn', text: event.payload.text } })\r\n      blocks.push(event.payload.quick_replies)\r\n    }\r\n\r\n    const message = {\r\n      text: event.payload.text,\r\n      channel: event.threadId || event.target,\r\n      blocks\r\n    }\r\n\r\n    debugOutgoing(`Sending message %o`, message)\r\n    await this.client.chat.postMessage(message)\r\n\r\n    next(undefined, false)\r\n  }\r\n\r\n  private async sendEvent(ctx: any, payload: any) {\r\n    const threadId = _.get(ctx, 'channel.id') || _.get(ctx, 'channel')\r\n    const target = _.get(ctx, 'user.id') || _.get(ctx, 'user')\r\n\r\n    this.bp.events.sendEvent(\r\n      this.bp.IO.Event({\r\n        botId: this.botId,\r\n        channel: 'slack',\r\n        direction: 'incoming',\r\n        payload,\r\n        type: payload.type,\r\n        preview: payload.text,\r\n        threadId: threadId && threadId.toString(),\r\n        target: target && target.toString()\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport async function setupMiddleware(bp: typeof sdk, clients: Clients) {\r\n  bp.events.registerMiddleware({\r\n    description:\r\n      'Sends out messages that targets platform = slack.' +\r\n      ' This middleware should be placed at the end as it swallows events once sent.',\r\n    direction: 'outgoing',\r\n    handler: outgoingHandler,\r\n    name: 'slack.sendMessages',\r\n    order: 100\r\n  })\r\n\r\n  async function outgoingHandler(event: sdk.IO.Event, next: sdk.IO.MiddlewareNextCallback) {\r\n    if (event.channel !== 'slack') {\r\n      return next()\r\n    }\r\n\r\n    const client: SlackClient = clients[event.botId]\r\n    if (!client) {\r\n      return next()\r\n    }\r\n\r\n    return client.handleOutgoingEvent(event, next)\r\n  }\r\n}\r\n"]}